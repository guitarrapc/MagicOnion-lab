// <auto-generated />
#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnion
{
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::MagicOnion;
    using global::MagicOnion.Client;

    public static partial class MagicOnionInitializer
    {
        static bool isRegistered = false;

#if UNITY_2019_4_OR_NEWER
        [UnityEngine.RuntimeInitializeOnLoadMethod(UnityEngine.RuntimeInitializeLoadType.BeforeSceneLoad)]
#elif NET5_0_OR_GREATER
        [System.Runtime.CompilerServices.ModuleInitializer]
#endif
        public static void Register()
        {
            if (isRegistered) return;
            isRegistered = true;

            global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default =
                (global::MagicOnion.Client.MagicOnionClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider immutableMagicOnionClientFactoryProvider)
                    ? immutableMagicOnionClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableMagicOnionClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);

            global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default =
                (global::MagicOnion.Client.StreamingHubClientFactoryProvider.Default is global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider immutableStreamingHubClientFactoryProvider)
                    ? immutableStreamingHubClientFactoryProvider.Add(MagicOnionGeneratedClientFactoryProvider.Instance)
                    : new global::MagicOnion.Client.ImmutableStreamingHubClientFactoryProvider(MagicOnionGeneratedClientFactoryProvider.Instance);
        }
    }

    public partial class MagicOnionGeneratedClientFactoryProvider : global::MagicOnion.Client.IMagicOnionClientFactoryProvider, global::MagicOnion.Client.IStreamingHubClientFactoryProvider
    {
        public static MagicOnionGeneratedClientFactoryProvider Instance { get; } = new MagicOnionGeneratedClientFactoryProvider();

        MagicOnionGeneratedClientFactoryProvider() {}

        bool global::MagicOnion.Client.IMagicOnionClientFactoryProvider.TryGetFactory<T>(out global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> factory)
            => (factory = MagicOnionClientFactoryCache<T>.Factory) != null;

        bool global::MagicOnion.Client.IStreamingHubClientFactoryProvider.TryGetFactory<TStreamingHub, TReceiver>(out global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> factory)
            => (factory = StreamingHubClientFactoryCache<TStreamingHub, TReceiver>.Factory) != null;

        static class MagicOnionClientFactoryCache<T> where T : global::MagicOnion.IService<T>
        {
            public readonly static global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T> Factory;

            static MagicOnionClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>);

                if (typeof(T) == typeof(global::MagicOnionLab.Shared.Services.IMathService))
                {
                    factory = ((global::MagicOnion.Client.MagicOnionClientFactoryDelegate<global::MagicOnionLab.Shared.Services.IMathService>)((x, y) => new MagicOnionLab.Shared.Services.MathServiceClient(x, y)));
                }
                Factory = (global::MagicOnion.Client.MagicOnionClientFactoryDelegate<T>)factory;
            }
        }
        
        static class StreamingHubClientFactoryCache<TStreamingHub, TReceiver> where TStreamingHub : global::MagicOnion.IStreamingHub<TStreamingHub, TReceiver>
        {
            public readonly static global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver> Factory;

            static StreamingHubClientFactoryCache()
            {
                object factory = default(global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>);

                if (typeof(TStreamingHub) == typeof(global::MagicOnionLab.Shared.Hubs.IGameHub) && typeof(TReceiver) == typeof(global::MagicOnionLab.Shared.Hubs.IGameHubReceiver))
                {
                    factory = ((global::MagicOnion.Client.StreamingHubClientFactoryDelegate<global::MagicOnionLab.Shared.Hubs.IGameHub, global::MagicOnionLab.Shared.Hubs.IGameHubReceiver>)((a, _, b, c, d, e) => new MagicOnionLab.Shared.Hubs.GameHubClient(a, b, c, d, e)));
                }

                Factory = (global::MagicOnion.Client.StreamingHubClientFactoryDelegate<TStreamingHub, TReceiver>)factory;
            }
        }
    }

}

#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.
namespace MagicOnion.Resolvers
{
    using global::System;
    using global::MessagePack;

    partial class PreserveAttribute : global::System.Attribute {}
    public class MagicOnionResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new MagicOnionResolver();
    
        MagicOnionResolver() {}
    
        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
            => FormatterCache<T>.formatter;
    
        static class FormatterCache<T>
        {
            public static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> formatter;
    
            static FormatterCache()
            {
                var f = MagicOnionResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }
    internal static class MagicOnionResolverGetFormatterHelper
    {
        static readonly global::System.Collections.Generic.Dictionary<global::System.Type, int> lookup;
    
        static MagicOnionResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, int>(1)
            {
                {typeof(global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>), 0 },
            };
        }
        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }
        
            switch (key)
            {
                case 0: return new global::MagicOnion.DynamicArgumentTupleFormatter<global::System.Int32, global::System.Int32>(default(global::System.Int32), default(global::System.Int32));
                default: return null;
            }
        }
    }
    /// <summary>Type hints for Ahead-of-Time compilation.</summary>
    [MagicOnion.Resolvers.Preserve]
    internal static class TypeHints
    {
        [MagicOnion.Resolvers.Preserve]
        internal static void Register()
        {
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateResponse>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MagicOnionLab.Shared.Mpos.MathResultMpo>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::MessagePack.Nil>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.Int32>();
            _ = MagicOnionResolver.Instance.GetFormatter<global::System.String>();
        }
    }
}
#pragma warning restore 168
#pragma warning restore 219
#pragma warning restore 414
#pragma warning restore 612
#pragma warning restore 618

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnionLab.Shared.Services
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class MathServiceClient : global::MagicOnion.Client.MagicOnionClientBase<global::MagicOnionLab.Shared.Services.IMathService>, global::MagicOnionLab.Shared.Services.IMathService
    {
        class ClientCore
        {
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32> SumAsync;
            public global::MagicOnion.Client.Internal.RawMethodInvoker<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::MagicOnionLab.Shared.Mpos.MathResultMpo> SumMpoAsync;
            public ClientCore(global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider)
            {
                this.SumAsync = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_ValueType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::System.Int32>(global::Grpc.Core.MethodType.Unary, "IMathService", "SumAsync", serializerProvider);
                this.SumMpoAsync = global::MagicOnion.Client.Internal.RawMethodInvoker.Create_ValueType_RefType<global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>, global::MagicOnionLab.Shared.Mpos.MathResultMpo>(global::Grpc.Core.MethodType.Unary, "IMathService", "SumMpoAsync", serializerProvider);
            }
        }
        
        readonly ClientCore core;
        
        public MathServiceClient(global::MagicOnion.Client.MagicOnionClientOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider) : base(options)
        {
            this.core = new ClientCore(serializerProvider);
        }
        
        private MathServiceClient(MagicOnionClientOptions options, ClientCore core) : base(options)
        {
            this.core = core;
        }
        
        protected override global::MagicOnion.Client.MagicOnionClientBase<IMathService> Clone(global::MagicOnion.Client.MagicOnionClientOptions options)
            => new MathServiceClient(options, core);
        
        public global::MagicOnion.UnaryResult<global::System.Int32> SumAsync(global::System.Int32 x, global::System.Int32 y)
            => this.core.SumAsync.InvokeUnary(this, "IMathService/SumAsync", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>(x, y));
        public global::MagicOnion.UnaryResult<global::MagicOnionLab.Shared.Mpos.MathResultMpo> SumMpoAsync(global::System.Int32 x, global::System.Int32 y)
            => this.core.SumMpoAsync.InvokeUnary(this, "IMathService/SumMpoAsync", new global::MagicOnion.DynamicArgumentTuple<global::System.Int32, global::System.Int32>(x, y));
    }
}


#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 219
#pragma warning disable 168

// NOTE: Disable warnings for nullable reference types.
// `#nullable disable` causes compile error on old C# compilers (-7.3)
#pragma warning disable 8603 // Possible null reference return.
#pragma warning disable 8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.
#pragma warning disable 8625 // Cannot convert null literal to non-nullable reference type.

namespace MagicOnionLab.Shared.Hubs
{
    using global::System;
    using global::Grpc.Core;
    using global::MagicOnion;
    using global::MagicOnion.Client;
    using global::MessagePack;
    
    [global::MagicOnion.Ignore]
    public class GameHubClient : global::MagicOnion.Client.StreamingHubClientBase<global::MagicOnionLab.Shared.Hubs.IGameHub, global::MagicOnionLab.Shared.Hubs.IGameHubReceiver>, global::MagicOnionLab.Shared.Hubs.IGameHub
    {
        protected override global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]> DuplexStreamingAsyncMethod { get; }
        
        public GameHubClient(global::Grpc.Core.CallInvoker callInvoker, global::System.String host, global::Grpc.Core.CallOptions options, global::MagicOnion.Serialization.IMagicOnionSerializerProvider serializerProvider, global::MagicOnion.Client.IMagicOnionClientLogger logger)
            : base(callInvoker, host, options, serializerProvider, logger)
        {
            var marshaller = global::MagicOnion.MagicOnionMarshallers.ThroughMarshaller;
            DuplexStreamingAsyncMethod = new global::Grpc.Core.Method<global::System.Byte[], global::System.Byte[]>(global::Grpc.Core.MethodType.DuplexStreaming, "IGameHub", "Connect", marshaller, marshaller);
        }
        
        public global::System.Threading.Tasks.ValueTask CreateRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest request)
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest, global::MessagePack.Nil>(-1834794698, request));
        public global::System.Threading.Tasks.ValueTask JoinRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest request)
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest, global::MessagePack.Nil>(464561018, request));
        public global::System.Threading.Tasks.ValueTask LeaveRoomAsync()
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1964019333, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.ValueTask ReadyMatchAsync()
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-658877817, global::MessagePack.Nil.Default));
        public global::System.Threading.Tasks.ValueTask UpdateUserInfonAsync(global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest request)
            => new global::System.Threading.Tasks.ValueTask(base.WriteMessageWithResponseAsync<global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest, global::MessagePack.Nil>(-1055620791, request));
        
        public global::MagicOnionLab.Shared.Hubs.IGameHub FireAndForget()
            => new FireAndForgetClient(this);
        
        [global::MagicOnion.Ignore]
        class FireAndForgetClient : global::MagicOnionLab.Shared.Hubs.IGameHub
        {
            readonly GameHubClient parent;
        
            public FireAndForgetClient(GameHubClient parent)
                => this.parent = parent;
        
            public global::MagicOnionLab.Shared.Hubs.IGameHub FireAndForget() => this;
            public global::System.Threading.Tasks.Task DisposeAsync() => throw new global::System.NotSupportedException();
            public global::System.Threading.Tasks.Task WaitForDisconnect() => throw new global::System.NotSupportedException();
        
            public global::System.Threading.Tasks.ValueTask CreateRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest request)
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest, global::MessagePack.Nil>(-1834794698, request));
            public global::System.Threading.Tasks.ValueTask JoinRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest request)
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest, global::MessagePack.Nil>(464561018, request));
            public global::System.Threading.Tasks.ValueTask LeaveRoomAsync()
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(1964019333, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.ValueTask ReadyMatchAsync()
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MessagePack.Nil, global::MessagePack.Nil>(-658877817, global::MessagePack.Nil.Default));
            public global::System.Threading.Tasks.ValueTask UpdateUserInfonAsync(global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest request)
                => new global::System.Threading.Tasks.ValueTask(parent.WriteMessageFireAndForgetAsync<global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest, global::MessagePack.Nil>(-1055620791, request));
            
        }
        
        protected override void OnBroadcastEvent(global::System.Int32 methodId, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case 860157199: // Void OnCreateRoom(global::System.String roomName)
                    {
                        var value = base.Deserialize<global::System.String>(data);
                        receiver.OnCreateRoom(value);
                    }
                    break;
                case -2144044989: // Void OnJoinRoom(global::System.String userName)
                    {
                        var value = base.Deserialize<global::System.String>(data);
                        receiver.OnJoinRoom(value);
                    }
                    break;
                case -2039640760: // Void OnLeaveRoom(global::System.String userName)
                    {
                        var value = base.Deserialize<global::System.String>(data);
                        receiver.OnLeaveRoom(value);
                    }
                    break;
                case 1440852062: // Void OnMatchCompleted()
                    {
                        var value = base.Deserialize<global::MessagePack.Nil>(data);
                        receiver.OnMatchCompleted();
                    }
                    break;
                case -1237531074: // Void OnUpdateUserInfo(global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateResponse response)
                    {
                        var value = base.Deserialize<global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateResponse>(data);
                        receiver.OnUpdateUserInfo(value);
                    }
                    break;
            }
        }
        
        protected override void OnResponseEvent(global::System.Int32 methodId, global::System.Object taskCompletionSource, global::System.ArraySegment<global::System.Byte> data)
        {
            switch (methodId)
            {
                case -1834794698: // ValueTask CreateRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomCreateRequest request)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 464561018: // ValueTask JoinRoomAsync(global::MagicOnionLab.Shared.Mpos.GameRoomJoinRequest request)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case 1964019333: // ValueTask LeaveRoomAsync()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -658877817: // ValueTask ReadyMatchAsync()
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
                case -1055620791: // ValueTask UpdateUserInfonAsync(global::MagicOnionLab.Shared.Mpos.GameRoomUserInfoUpdateRequest request)
                    base.SetResultForResponse<global::MessagePack.Nil>(taskCompletionSource, data);
                    break;
            }
        }
        
    }
}


